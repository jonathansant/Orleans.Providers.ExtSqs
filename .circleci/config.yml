version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: microsoft/aspnetcore-build:2.0
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      API_KEY: 
    steps:
      - run:
          name: Print environment versions
          command: |
            NPM_V=$(npm -v)
            echo npm version':' $NPM_V
            DOTNET_CLI_V=$(dotnet --version)
            echo dotnet cli version':' $DOTNET_CLI_V
      - checkout
      - run:
          name: Restore and build
          command: |
            . ./.circleci/utils.sh
            eval $(parse_yaml ./.circleci/app-config.yml "CONFIG_")
            print_title "restore packages"
            dotnet restore $CONFIG_SOLUTION /p:Configuration=Release

            print_title "dotnet build"
            dotnet build $CONFIG_SOLUTION -c Release
      - run:
          name: test
          command: npm test
      - deploy:
          name: Publish NuGet
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              echo -e "\e[33m Branch does not publish -- exit!"
              exit
            fi
            . ./.circleci/utils.sh
             eval $(parse_yaml ./.circleci/app-config.yml "CONFIG_")

            PACKAGE_VERSION=$(node -p "require('./package.json').version")
            dotnet pack $CONFIG_SOLUTION /p:PackageVersion=$PACKAGE_VERSION -o ../../ -c release
            dotnet nuget push *.nupkg -k $API_KEY

            print_title "git tag"
            git tag $PACKAGE_VERSION
            git push --tags